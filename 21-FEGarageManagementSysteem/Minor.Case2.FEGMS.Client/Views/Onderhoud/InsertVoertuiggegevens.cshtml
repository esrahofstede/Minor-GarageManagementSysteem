@model Minor.Case2.FEGMS.Client.ViewModel.InsertVoertuiggegevensVM

@{
    ViewBag.Title = "Voertuiggegevens invoeren";
}

<h2>Voertuiggegevens invoeren</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @if (Model.Voertuigen != null)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Exist, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.CheckBoxFor(model => model.Exist)
                        @Html.ValidationMessageFor(model => model.Exist, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group" id="existing-voertuigen" @*style="@(!Model.Exist ? "display: none;" : "") }} "*@>
                @Html.LabelFor(model => model.Voertuigen, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.SelectedKenteken, Model.Voertuigen, "Selecteer een auto", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Voertuigen, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        <div class="form-group">
            @Html.LabelFor(model => model.Kenteken, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Kenteken, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Kenteken, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Merk, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Merk, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Merk, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Invoeren" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
