@model Minor.Case2.FEGMS.Client.ViewModel.InsertLeasemaatschappijGegevensVM

@{
    ViewBag.Title = "Leasemaatschappij invoeren";
}

<h2>Leasemaatschappij gegevens invoeren</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
       
        <div class="form-group">
            @Html.LabelFor(model => model.Exist, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.CheckBoxFor(model => model.Exist)
                    @Html.ValidationMessageFor(model => model.Exist, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


         <div class="form-group" id="existing-leasemaatschappijen" style="@(!Model.Exist ? "display: none;" : "") }} ">
            @Html.LabelFor(model => model.Leasemaatschappijen, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SelectedLeasemaatschappijID, Model.Leasemaatschappijen, "Selecteer een leasemaatschappij", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Leasemaatschappijen, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group new-leasemaatschappijen" style="@(Model.Exist ? "display: none;" : "") }} ">
            @Html.LabelFor(model => model.Naam, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Naam, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Naam, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group new-leasemaatschappijen" style="@(Model.Exist ? "display: none;" : "") }} ">
            @Html.LabelFor(model => model.Telefoonnummer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Telefoonnummer, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Telefoonnummer, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Invoeren" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
